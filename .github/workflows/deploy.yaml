name: Airfold deploy

on:
  push:
    branches:
      - main
    paths:
      - airfold/**
  pull_request:
    branches:
      - main
    paths:
      - airfold/**
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  airfold:
    name: Plan / Apply
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.DEPLOY_TOKEN }}

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
            python-version: 3.11

      - name: Install dependencies
        run: |
          pip install -e .

      - name: Setup token
        shell: 'script --return --quiet --log-out /dev/null --command "bash -e {0}"'
        run: |
          echo "${{ secrets.AIRFOLD_API_KEY }}" | af config

      - name: Airfold diff
        id: diff
        if: github.event_name == 'pull_request'
        run: |
          af diff airfold | tee .out.txt
          {
            echo 'stdout<<aeshaiYei1'
            cat .out.txt
            echo
            echo aeshaiYei1
          } >> "$GITHUB_OUTPUT"
        continue-on-error: true

      - name: Airfold plan
        id: plan
        if: github.event_name == 'pull_request'
        run: |
          af push airfold --dry-run | tee .out.txt
          {
            echo 'stdout<<aeshaiYei1'
            cat .out.txt
            echo
            echo aeshaiYei1
          } >> "$GITHUB_OUTPUT"
        continue-on-error: true

      - name: Pull Request Comment
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
          DIFF: "${{ steps.diff.outputs.stdout }}"
        with:
          github-token: ${{ secrets.DEPLOY_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Airfold diff and plan')
            })
            
            const output = `### Airfold diff and plan
            
            #### Airfold Diff ‚öôÔ∏è \`${{ steps.diff.outcome }}\`
            
            <details><summary>Diff Output</summary>
            
            \`\`\`\n
            ${process.env.DIFF}
            \`\`\`
            
            </details>
            
            #### Airfold Plan üìñ \`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>`;
            
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }

      - name: Airfold Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Airfold push and apply
        if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'workflow_dispatch'
        run: af push airfold
